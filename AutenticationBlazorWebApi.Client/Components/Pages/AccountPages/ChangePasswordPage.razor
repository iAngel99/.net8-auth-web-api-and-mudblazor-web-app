@using Microsoft.IdentityModel.Tokens
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

<EditForm Model="@PasswordChange" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator />
    <MudCard Class="mudContainer" Elevation="100">
        <MudCardHeader>
            <CardHeaderContent>
                <div class="d-flex flex-column align-items-center">
                    <MudText Typo="Typo.h4" Class="mb3" Color="Color.Info">Cambiar contraseña</MudText>
                    <MudImage Src="/logos/register.webp" Alt="Login Icon" Elevation="25" Class="rounded-lg" Style="width: 75px; height: 75px;" />
                </div>
            </CardHeaderContent>
        </MudCardHeader>

        <MudCardContent Class="mudLightblue">
            <MudTextField Label="Contraseña Actual" @bind-Value="PasswordChange.OldPassword" Class="mt3 whiteLabel"
                          For="@(() => PasswordChange.OldPassword)" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon"
                          OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" AdornmentColor="Color.Info">
            </MudTextField>
            <MudTextField Label="Contraseña Nueva" @bind-Value="PasswordChange.Password" Class="mt3 whiteLabel" Adornment="Adornment.End"
                          For="@(() => PasswordChange.Password)" InputType="@PasswordConfirmInput" AdornmentIcon="@PasswordConfirmInputIcon"
                          OnAdornmentClick="ButtonShowclick" AdornmentAriaLabel="Show Password" AdornmentColor="Color.Info">
            </MudTextField>
            <MudTextField Label="Confirmar Contraseña Nueva" @bind-Value="PasswordChange.ConfirmPassword" Class="mt3 whiteLabel" Adornment="Adornment.End"
                          For="@(() => PasswordChange.ConfirmPassword)" InputType="@passwordConfirmInputType" AdornmentIcon="@PasswordConfirmIcon"
                          OnAdornmentClick="ButtonShowConfirmclick" AdornmentAriaLabel="Show Password" AdornmentColor="Color.Info">
            </MudTextField>
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                       Class="mtauto" Style="border-radius: 10%;">Submit</MudButton>
            <MudSpacer />
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Error"
                       Class="mtauto" Style="border-radius: 10%;" @onclick="Cancel">Cancelar</MudButton>
        </MudCardActions>
        @if (string.IsNullOrEmpty(Message) && string.IsNullOrEmpty(Errors))
        {
            <MudAlert Severity="Severity.Normal"></MudAlert>
        }
        @if (Message.Length > 0)
        {
            <MudAlert Severity="Severity.Success">@Message</MudAlert>
            <p class="visually-hidden">@AwaitAndCancel()</p>

        }
        @if (Errors.Length > 0)
        {
            <MudAlert Severity="Severity.Error">@Errors</MudAlert>
            <p class="visually-hidden">@AwaitAndCancel()</p>
        }

    </MudCard>
</EditForm>